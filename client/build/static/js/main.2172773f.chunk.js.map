{"version":3,"sources":["Components/Joystick.js","Components/AimArea.js","App.js","serviceWorker.js","Phaser/Scenes/MainScene.js","index.js","UI/JoystickManager.js","UI/AimAreaManager.js"],"names":["Joystick","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","joyAreaLeft","window","joystickManager","x","joyAreaTop","y","joyAreaWidth","w","joyAreaHeight","h","onTouchStart","bind","assertThisInitialized","onTouchEnd","onTouchCancel","onTouchMove","joystick","e","touches","changedTouches","i","length","pageX","onReceiveJoystickTouchCoords","pageY","stopJoystickMovement","stopPropagation","console","log","mainScene","playerToMove","deltaX","centerX","deltaY","centerY","dist","Math","sqrt","ratio","normalizedX","normalizedY","react_default","a","createElement","Fragment","id","style","position","left","top","width","innerWidth","height","innerHeight","Component","AimArea","areaLeft","aimAreaManager","areaTop","areaWidth","areaHeight","projLeft","projRight","abs","projTop","setState","App","className","Joystick_Joystick","AimArea_AimArea","Boolean","location","hostname","match","MainScene","test","key","posSendTimer","characters","myCharacter","NPCs","projectiles","load","spritesheet","frameWidth","frameHeight","undefined","sys","game","config","cameras","resize","player","add","sprite","graphics","lineStyle","color","fillStyle","alpha","fillRect","fillRoundedRect","time","delta","main","startFollow","Phaser","type","pixelArt","parent","physics","default","scene","scale","mode","FIT","keys","JoystickManager","AimAreaManager","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","preventDefault","addEventListener","scrollTo","element","startup","event"],"mappings":"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","file":"static/js/main.2172773f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// TODO - REIMPLEMENT THIS IN CANVAS OR INSIDE PHASER SCENE WITH A SPRITE, to reduce cpu load\n\nexport default class Joystick extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //stickLeft: window.joystickManager.x,\n      //stickTop: window.innerHeight - 77.5,\n      //stickWidth: 30,\n     // stickHeight: 30,\n\n      joyAreaLeft: window.joystickManager.props.x,\n      joyAreaTop: window.joystickManager.props.y,\n      joyAreaWidth: window.joystickManager.props.w,\n      joyAreaHeight: window.joystickManager.props.h\n    };\n\n    //this.setJoystickPos = this.setJoystickPos.bind(this);\n    //this.resetJoystickPos = this.resetJoystickPos.bind(this);\n\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onTouchCancel = this.onTouchCancel.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n  } \n\n  componentDidMount() {\n    window.joystick = this;\n  }\n\n  onTouchStart(e) {\n    var touches = e.changedTouches;\n\n    for(var i = 0; i < touches.length; i++) {\n      \n      //console.log(\"tstart, x: \" + touches[i].pageX + \" y: \" + touches[i].pageY);\n\n      // TODO check for bounds\n\n      //console.log(\"area bounds: \" + window.joystick.areaBoundsX);\n\n      if(touches[i].pageX < 300) {\n\n        this.onReceiveJoystickTouchCoords(touches[i].pageX,\n          touches[i].pageY);\n\n\n\n\n      // window.joystick.setJoystickPos( touches[i].pageX, touches[i].pageY)\n      }\n\n     \n    }\n\n    // skip testing if touch is in bounds of the joystick circle area for now..\n  }\n\n  onTouchEnd(e) {\n    this.stopJoystickMovement();\n  }\n\n  onTouchCancel(e) {\n\n  }\n\n  onTouchMove(e) {\n    e.stopPropagation();\n\n    var touches = e.changedTouches;\n\n    for(var i = 0; i < touches.length; i++) {\n      \n      if(touches[i].pageX < 300) {\n        this.onReceiveJoystickTouchCoords(touches[i].pageX,\n          touches[i].pageY);\n      } else {\n        this.stopJoystickMovement();\n      }\n    }\n  }\n\n  stopJoystickMovement() {\n    console.log(\"stopping joy movement\");\n  \n    window.mainScene.playerToMove.x = 0;\n    window.mainScene.playerToMove.y = 0;\n  }\n\n  onReceiveJoystickTouchCoords(x, y) {\n\n    var deltaX = x - window.joystickManager.props.centerX;\n    var deltaY = y - window.joystickManager.props.centerY;\n\n    // find hypoteneuse\n    var dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n    if(dist > window.joystickManager.props.w / 2) {\n      // get ratio of dist to max\n      var ratio = dist / window.joystickManager.props.w;\n\n      deltaX /= ratio;\n      deltaY /= ratio;\n    }\n\n    //var angle = Math.atan2(deltaY, deltaX);\n    var normalizedX = deltaX / (window.joystickManager.props.w / 2);\n    var normalizedY = deltaY / (window.joystickManager.props.h / 2);\n\n   // console.log(\"Angle : \" + angle);\n\n   //console.log(\"ratioXY: \" + ratioXY);\n\n   // x component\n\n     // console.log(\"normalizedX: \" + normalizedX );\n     // console.log(\"normalizedY: \" + normalizedY );\n    \n      // normalize further\n\n      //pass on x , y to scene\n  \n    window.mainScene.playerToMove.x = normalizedX;\n    window.mainScene.playerToMove.y = normalizedY;\n}\n\n  render() {\n\n  //return <></> \n/*\n\n<div id=\"joystick-stick\" style={{ \n        left: this.state.stickLeft, \n        top: this.state.stickTop,\n        width: this.state.stickWidth,\n        height: this.state.stickHeight,\n      }}>\n\n      </div>\n\n*/\n    \n    return (\n      <>\n        <div id=\"joystick-toucharea\" \n          style={{\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            width: window.innerWidth / 3,\n            height: window.innerHeight\n          }}\n          onTouchStart={this.onTouchStart}\n          onTouchEnd={this.onTouchEnd}\n          onTouchCancel={this.onTouchCancel}\n          onTouchMove={this.onTouchMove}\n          >\n        </div>\n        \n        <div id=\"joystick-circle\" \n          style={{ \n            left: this.state.joyAreaLeft, \n            top: this.state.joyAreaTop,\n            width: this.state.joyAreaWidth,\n            height: this.state.joyAreaHeight,\n          }}>\n        </div>\n      </>\n    );\n    \n  }\n}","import React, { Component } from 'react';\n\nexport default class AimArea extends Component {\n  constructor() {\n\n    super();\n\n    this.state = {\n      areaLeft: window.aimAreaManager.props.left,\n      areaTop: window.aimAreaManager.props.top,\n      areaWidth: window.aimAreaManager.props.width,\n      areaHeight: window.aimAreaManager.props.height,\n\n      centerX : window.aimAreaManager.props.centerX,\n      centerY : window.aimAreaManager.props.centerY,\n\n      projLeft: 0,\n      projRight: 0,\n    };\n\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n  }\n\n  onTouchEnd(e) {\n    e.stopPropagation();\n\n    var touches = e.changedTouches;\n\n    var deltaX = touches[0].pageX - this.state.centerX;\n    var deltaY = touches[0].pageY - this.state.centerY;\n\n    //var angle = Math.atan2(deltaY, deltaX);\n    var normalizedX = deltaX / (this.state.areaWidth / 2);\n    var normalizedY = deltaY / (this.state.areaHeight / 2);\n\n   // console.log(\"Angle : \" + angle);\n\n   //console.log(\"ratioXY: \" + ratioXY);\n\n   // x component\n\n      console.log(\"normalizedX: \" + normalizedX );\n      console.log(\"normalizedY: \" + normalizedY );\n    \n      \n\n      var sum = Math.abs(normalizedX) + Math.abs(normalizedY);\n\n      \n\n      var ratio = 1 / sum;\n\n      console.log(\"ratio: \" + ratio);\n;\n      normalizedX *= Math.abs(ratio);\n      normalizedY *= Math.abs(ratio);\n\n      console.log(\"normalized new values, x: \" + normalizedX + \" y: \" + normalizedY);\n\n      var projLeft =  (window.innerWidth / 2) + normalizedX * 100;\n      var projTop =  (window.innerHeight / 2) + normalizedY * 100;\n\n      this.setState({\n        projLeft: projLeft,\n        projTop: projTop\n      });\n    \n\n   // y component\n  }\n\n  onTouchMove(e) {\n    e.stopPropagation();\n    //console.log(\"area onTouchMove\");\n  }\n\n  onTouchStart(e) {\n    e.stopPropagation();\n    //console.log(\"area onTouchStart\");\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"aim-area\" onTouchStart={this.onTouchStart} onTouchMove={this.onTouchMove} onTouchEnd={this.onTouchEnd}\n          style={{\n            top: this.state.areaTop,\n            left: this.state.areaLeft,\n            width: this.state.areaWidth,\n            height: this.state.areaHeight\n          }}>\n\n        </div>\n\n        <div id=\"aim-dot\" style={{\n          left: this.state.centerX - 1,\n          top: this.state.centerY - 1,\n          width: 2,\n          height: 2\n        }}>\n        </div>\n\n        <div id=\"aim-projectile\" style ={{\n          left: this.state.projLeft,\n          top: this.state.projTop,\n          width: 2,\n          height: 2\n        }}>\n        </div>\n\n        <div id=\"center-dot\" style ={{\n          left: window.innerWidth / 2,\n          top: window.innerHeight / 2,\n          width: 2,\n          height: 2\n        }}>\n        </div>\n\n       \n      </>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Joystick from './Components/Joystick';\nimport AimArea from './Components/AimArea';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      \n    };\n\n    this.onTouchCancel = this.onTouchCancel.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n  }\n\n  getJoystickCenterPos() {\n    //var x = this.state.joystickleft + this.state.joystickwidth / 2;\n    var y = 0; // need to get screen height, and subtract joystickbottom and joystickheight / 2\n  }\n  \n  onTouchCancel(e) {\n    e.stopPropagation();\n    console.log(\"onTouchCancel\");\n  }\n\n  onTouchEnd(e) {\n    e.stopPropagation();\n    console.log(\"onTouchEnd\");\n  }\n\n  onTouchMove(e) {\n    e.stopPropagation();\n    console.log(\"onTouchMove\");\n  }\n\n  onTouchStart(e) {\n    e.stopPropagation();\n    console.log(\"onTouchStart\");\n\n    // check if it is in joystick region\n    \n  }\n\n  render() {\n\n    const oldReturn = (\n    \n    <div className=\"App\" onTouchCancel={this.onTouchCancel} onTouchEnd={this.onTouchEnd} onTouchMove={this.onTouchMove} onTouchStart={this.onTouchStart}>\n        \n  </div>\n  );\n\n    return (\n      <div className=\"App\">\n      <Joystick></Joystick>\n      <AimArea></AimArea>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Phaser from 'phaser';\n\nclass MainScene extends Phaser.Scene {\n    constructor(test) {\n        super({\n            key: 'MainScene'\n        });\n\n        window.mainScene = this;\n        \n        this.posSendTimer = 0;\n\n        this.characters = {}; // should contain refs to all nearby user controlled characters\n        \n        this.myCharacter = null;\n        \n        this.NPCs = {}; // should contain refs to all nearby npcs\n        \n        this.projectiles = {};\n\n        this.playerToMove = {\n            x: 0,\n            y: 0\n        };\n    }\n\n    // todo: clean this all up\n\n    preload() {\n        /*\n        this.load.image(\n            \"tiles\",\n            \"../assets/tilesets/tiles-extruded-name.png\"\n        );\n\n        this.load.tilemapTiledJSON(\n            \"map\",\n            \"../assets/tilemaps/tilemapname.json\"\n        );\n        */\n        /*\n        this.load.spritesheet('warrior', 'assets/sprites/warrior_test.png',\n            { frameWidth: 32, frameHeight: 32 });\n        */\n        /*\n        this.load.scenePlugin('animatedTiles', AnimatedTiles, 'animatedTiles', 'animatedTiles');\n        */\n\n       this.load.spritesheet('player', './assets/initialspritesheet.png', { frameWidth: 17, frameHeight: 19 });\n\n       console.log(\"in mainscene\");\n    }\n\n    resize(width, height) {\n        if (width === undefined) { width = this.sys.game.config.width; }\n        if (height === undefined) { height = this.sys.game.config.height; }\n\n        this.cameras.resize(width, height);\n        console.log(\"resized!\");\n        //this.cameras.main.setViewport(0, 0, width, height);\n    }\n\n    create() {\n\n        this.player = this.add.sprite(window.innerWidth / 2, window.innerHeight / 2, 'player');\n\n      /*\n      const camera = this.cameras.main;\n      \n      //camera.setZoom();\n\n      // Set up the arrows to control the camera\n      const cursors = this.input.keyboard.createCursorKeys();\n      this.controls = new Phaser.Cameras.Controls.FixedKeyControl({\n        camera: camera,\n        left: cursors.left,\n        right: cursors.right,\n        up: cursors.up,\n        down: cursors.down,\n        speed: 0.75\n      });\n      */\n      /*\n     const map = this.make.tilemap({ key: \"map\" });\n\n     const tiles = map.addTilesetImage(\n     \"0x72-industrial-tileset-32px-extruded\",\n     \"tiles\"\n\n     map.createDynamicLayer(\"Background\", tiles);\n     this.groundLayer = map.createDynamicLayer(\"Ground\", tiles);\n     map.createDynamicLayer(\"Foreground\", tiles);\n     */\n    //);\n      \n     // this.mainSprite = this.add.sprite(1, 1, 'warrior');\n      \n      //var newPlayer = new Player(this);\n     // this.myPlayer = new MyPlayer(newPlayer);\n\n      var graphics = this.add.graphics({ lineStyle: { width: 2, color: 0xaa0000 }, fillStyle: { color: 0xc1c1c1, alpha: 0.3 } });\n\n      graphics.fillRect(window.innerWidth / 2 - 11, window.innerHeight / 2 - 11, 24, 24);\n\n      // also draw graphics for joystick\n\n      graphics.fillRoundedRect( window.joystickManager.props.x, window.joystickManager.props.y, \n        window.joystickManager.props.w, window.joystickManager.props.h, window.joystickManager.props.w / 2);\n      //graphics.fillRoundedRect(25, window.innerHeight - 100, 26, 26, 13);\n\n\n      console.log(\"created mainScene\");\n    }\n\n    update(time, delta) {\n        //console.log(\"delta: \" + delta);\n\n        delta /= 1000;\n        \n        if(this.playerToMove.x !== 0) \n            this.player.x += this.playerToMove.x * delta * 50;\n        if(this.playerToMove.y !== 0)    \n            this.player.y += this.playerToMove.y * delta * 50;\n        \n        this.cameras.main.startFollow(this.player);\n\n        /*\n\n        if(window.keysDown[window.keyBindings.moveUp]) {\n            this.myPlayer.player.sprite.y -= 100 *delta;\n        } \n        if(window.keysDown[window.keyBindings.moveDown]) {\n            this.myPlayer.player.sprite.y += 100 *delta;\n        }\n        if(window.keysDown[window.keyBindings.moveLeft]) { \n            this.myPlayer.player.sprite.x -= 100 *delta;\n        } \n        if(window.keysDown[window.keyBindings.moveRight]) {\n            this.myPlayer.player.sprite.x += 100 *delta;\n        }\n        \n        // after input is resolved, send info about new player's position to the server\n        this.posSendTimer += delta;\n\n        if(this.posSendTimer > 0.1) {\n            if(this.myPlayer.isInDifferentPosition()) {\n                \n                //broadcast new pos here\n                window.networkClient.sendPositionUpdate(this.myPlayer.player.sprite.x,\n                    this.myPlayer.player.sprite.y);\n\n                this.myPlayer.setOldPos(this.myPlayer.player.sprite.x,\n                    this.myPlayer.player.sprite.y);\n\n                this.posSendTimer = 0;\n            }\n        } \n\n        // todo - make a more manual camera follow solution, however for now, this is fine\n        \n\n        */\n    }\n}\n\nexport default MainScene;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport JoystickManager from './UI/JoystickManager';\nimport AimAreaManager from './UI/AimAreaManager';\n\nimport * as Phaser from 'phaser';\n\nimport MainScene from './Phaser/Scenes/MainScene';\n\nvar config = {\n  type: Phaser.WEBGL,\n  pixelArt: true,\n  //roundPixels: true,\n  parent: 'phaser-content',\n  width: window.innerWidth,\n  height: window.innerHeight,\n  physics: {\n      default: 'arcade'\n  },\n  scene: [\n      MainScene\n  ],\n  scale: {\n    parent: 'yourgamediv',\n    mode: Phaser.Scale.FIT,\n    width: window.innerWidth,\n    height:window.innerHeight\n}\n};\n\nvar main = new Phaser.Game(config);\n\n//var scaleManager = new Phaser.ScaleManager(main);\n\nwindow.main = main;\n\nwindow.mainScene = main.scene.keys[\"MainScene\"];\n\n// set up UI managers first, so react can pull state from them\nwindow.joystickManager = new JoystickManager();\nwindow.aimAreaManager = new AimAreaManager();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// The joystick relies on a few methods\n\n// One for continuing to monitor that touch's ID and updating the touch position based on its movements\n\n// One for detecting first touch, determining if the touch is within the bounds of the joystick circle area, and registering its ID as the currentJoystickTouchID\n\nvar currentJoystickTouchID = 0;\nvar joyStickIsBeingTouched = false;\n\n\n\n\n\nconst onTouchStart = (e) => {\n  e.preventDefault();\n};\n\nconst onTouchMove = (e) => {\n  e.preventDefault();\n}\n\nconst startup = () => {\n  var element = document.getElementById('root');\n\n  element.addEventListener(\"touchstart\", onTouchStart, false);\n\n  element.addEventListener(\"touchmove\", onTouchMove, false);\n\n  element.addEventListener(\"touchend\", (e) => {\n    e.preventDefault();\n    console.log(\"end\");\n    \n  }, false);\n}\n\nwindow.addEventListener(\"load\", function() { \n  window.scrollTo(0, 1);\n  console.log(\"load called\");\n  startup();\n\n  console.log(\"x: \" + window.innerWidth + \"y: \" + window.innerHeight);\n});\n\ndocument.addEventListener('contextmenu', event => event.preventDefault());\n\nwindow.addEventListener('resize', () => {\n    console.log(\"calling resize\");\n    //window.main.resize(window.innerWidth, window.innerHeight);\n    window.mainScene.resize(window.innerWidth, window.innerHeight);\n    //main.scene.keys[\"MainScene\"].resize(window.innerWidth, window.innerHeight);\n});\n\n\n\n","export default class JoystickManager {\n  \n  constructor() {\n    this.props = {\n      x: 40,\n      y: window.innerHeight - 75 - 40,\n      w: 75,\n      h: 75\n    };\n\n    this.props.centerX = this.props.x + this.props.w / 2;\n    this.props.centerY = this.props.y + this.props.h / 2; \n  }\n}","export default class AimAreaManager {\n  \n  constructor() {\n    this.props = {\n      top: window.innerHeight - (25 + 120),\n      left: window.innerWidth - (25 + 120),\n      width: 120,\n      height: 120\n    };\n\n    this.props.centerX = this.props.left + this.props.width / 2;\n    this.props.centerY = this.props.top + this.props.height / 2;\n  }\n}"],"sourceRoot":""}